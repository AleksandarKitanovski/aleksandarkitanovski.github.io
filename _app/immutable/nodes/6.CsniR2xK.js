import{s as A,n as w}from"../chunks/scheduler.-dhH77K1.js";import{S as D,i as C,f as c,h as m,m as d,t as p,j as f,k as u,e as k,c as b,g as j,a as $,b as P,d as _,s as v,l as I,n as x,o as y}from"../chunks/index.BYsXf19S.js";import{P as S,D as g}from"../chunks/project_page.01wFTZYE.js";import{R as B}from"../chunks/radar_chart.DFUcHbF-.js";function G(l){let e,a=`The omnipresence of Android devices and the amount of sensitive information kept in them makes
		detecting malware in Android applications crucial. In this paper, the efficacy of using machine
		learning models for the purpose of malware detection in Android applications was examined, and
		several XGBoost models were developed and compared - each with a distinct feature set. We used
		the f1 score, precision, recall, confusion matrices, and precision-recall curves to compare the
		models. Accuracy was not considered since we needed a balanced dataset. One of the models we
		developed, which used all the available features in the dataset, had encouraging results with
		high precision and recall.`;return{c(){e=k("p"),e.textContent=a,this.h()},l(t){e=b(t,"P",{slot:!0,"data-svelte-h":!0}),j(e)!=="svelte-1un72qb"&&(e.textContent=a),this.h()},h(){$(e,"slot","desc")},m(t,n){P(t,e,n)},p:w,d(t){t&&_(e)}}}function L(l){let e,a,t,n,i,o,h;return a=new g({props:{title:"Programming Languages",data:[["Python",1]]}}),n=new g({props:{title:"Frameworks & Libraries",data:[["XGBoost",4],["Scikit-learn",3],["Pandas",2],["Numpy",1],["Seaborn",1]]}}),o=new g({props:{title:"Other software",data:[["Google Colab",2],["Latex",1]]}}),{c(){e=k("div"),c(a.$$.fragment),t=v(),c(n.$$.fragment),i=v(),c(o.$$.fragment),this.h()},l(r){e=b(r,"DIV",{slot:!0,class:!0});var s=I(e);m(a.$$.fragment,s),t=x(s),m(n.$$.fragment,s),i=x(s),m(o.$$.fragment,s),s.forEach(_),this.h()},h(){$(e,"slot","tech"),$(e,"class","flex flex-col mt-3 mb-6 justify-evenly space-y-8 lg:space-y-0 lg:flex-row lg:space-x-4")},m(r,s){P(r,e,s),d(a,e,null),y(e,t),d(n,e,null),y(e,i),d(o,e,null),h=!0},p:w,i(r){h||(p(a.$$.fragment,r),p(n.$$.fragment,r),p(o.$$.fragment,r),h=!0)},o(r){f(a.$$.fragment,r),f(n.$$.fragment,r),f(o.$$.fragment,r),h=!1},d(r){r&&_(e),u(a),u(n),u(o)}}}function M(l){let e,a;return e=new B({props:{slot:"skills",dataPoints:{labels:["Binary Classification","Data Preprocessing","Data Analysis","Model Selection","Imbalanced Data","Malware"],data:[10,8,6,5,7,3]}}}),{c(){c(e.$$.fragment)},l(t){m(e.$$.fragment,t)},m(t,n){d(e,t,n),a=!0},p:w,i(t){a||(p(e.$$.fragment,t),a=!0)},o(t){f(e.$$.fragment,t),a=!1},d(t){u(e,t)}}}function X(l){let e,a;return e=new S({props:{title:"Detecting Malware in Android Applications using XGBoost",company:"FINKI",duration:"2 months",href:"https://www.finki.ukim.mk/",paper:"https://repository.ukim.mk/handle/20.500.12188/27385",$$slots:{skills:[M],tech:[L],desc:[G]},$$scope:{ctx:l}}}),{c(){c(e.$$.fragment)},l(t){m(e.$$.fragment,t)},m(t,n){d(e,t,n),a=!0},p(t,[n]){const i={};n&1&&(i.$$scope={dirty:n,ctx:t}),e.$set(i)},i(t){a||(p(e.$$.fragment,t),a=!0)},o(t){f(e.$$.fragment,t),a=!1},d(t){u(e,t)}}}class R extends D{constructor(e){super(),C(this,e,null,X,A,{})}}export{R as component};
